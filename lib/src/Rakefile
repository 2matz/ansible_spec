require 'rake'
require 'rspec/core/rake_task'
require 'yaml'
require 'ansible_spec'

playbook, inventoryfile = AnsibleSpec.load_ansiblespec
load_file = YAML.load_file(playbook)

# e.g. comment-out
if load_file === false
  puts 'Error: No data in site.yml'
  exit
end

properties = Array.new
load_file.each do |site|
  if site.has_key?("include")
    properties.push YAML.load_file(site["include"])[0]
  else
    properties.push site
  end
end
# puts properties
# {"name"=>"Ansible-Sample-TDD", "hosts"=>"server", "user"=>"root", "roles"=>["nginx", "mariadb"]}


#load inventry file
# inventory fileとplaybookのhostsをマッピングする。
hosts = AnsibleSpec.load_targets(inventoryfile)
properties.each do |var|
  if hosts.has_key?("#{var["hosts"]}")
    var["hosts"] = hosts["#{var["hosts"]}"]
  end
end
# puts properties
# {"name"=>"Ansible-Sample-TDD", "hosts"=>["192.168.0.103"], "user"=>"root", "roles"=>["nginx", "mariadb"]}

namespace :serverspec do
  properties.each do |var|
    var["hosts"].each do |host|
      desc "Run serverspec for #{var["name"]}"
      RSpec::Core::RakeTask.new(var["name"].to_sym) do |t|
        puts "Run serverspec for #{var["name"]} to #{host}"
        ENV['TARGET_HOST'] = host
        ENV['TARGET_PRIVATE_KEY'] = '~/.ssh/id_rsa'
        ENV['TARGET_USER'] = var["user"]
        t.pattern = 'roles/{' + var["roles"].join(',') + '}/spec/*_spec.rb'
      end
    end
  end
end

